{"version":3,"sources":["components/MovieDetail/MovieDetailHeader.tsx","components/MovieDetail/MovieDetail.style.tsx","components/MovieDetail/MovieDetailDescription.tsx","components/MovieDetail/MovieDetailList.tsx","components/MovieDetail/MovieDetailContent.tsx","components/MovieDetail/MovieDetail.tsx","shared/hooks/useMovieDetail.tsx"],"names":["Header","styled","header","COLOR_WHITE","Back","div","COLOR_GRAY","Title","h2","Team","p","MovieDetailHeader","title","director","producer","to","Wrapper","Label","h4","Text","MovieDetailDescription","description","WrapperCustom","COLOR_BORDER","WrapperList","ul","ListItem","li","MovieDetailList","label","list","length","map","data","i","key","section","COLOR_BACKGROUND","MovieDetailContent","characters","planets","species","starships","vehicles","MovieDetail","id","useParams","movieId","useState","movieDetail","setMovieDetail","loading","setLoading","useEffect","mounted","a","getSingleMovie","movieData","fetchData","useMovieDetail","Number","Loader"],"mappings":"2gCAOA,IAAMA,EAASC,IAAOC,OAAV,IAKDC,KAKLC,EAAOH,IAAOI,IAAV,IAOGC,KAMPC,EAAQN,IAAOO,GAAV,KAOLC,EAAOR,IAAOS,EAAV,KAQK,SAASC,EAAT,GAIa,IAH1BC,EAGyB,EAHzBA,MACAC,EAEyB,EAFzBA,SACAC,EACyB,EADzBA,SAEA,OACE,kBAACd,EAAD,KACE,kBAACI,EAAD,KACE,kBAAC,IAAD,CAAMW,GAAG,KAAT,wBAEF,kBAACR,EAAD,KAAQK,GACR,kBAACH,EAAD,mBAAkBI,GAClB,kBAACJ,EAAD,mBAAkBK,I,mYCrDjB,IAAME,EAAUf,IAAOI,IAAV,KAIPY,EAAQhB,IAAOiB,GAAV,IAGPZ,KAIEa,EAAOlB,IAAOS,EAAV,IAGNP,KCbI,SAASiB,EAAT,GAEkB,IAD/BC,EAC8B,EAD9BA,YAEA,OACE,kBAACL,EAAD,KACE,kBAACC,EAAD,oBACA,kBAACE,EAAD,KAAOE,I,8lBCHb,IAAMC,EAAgBrB,YAAOe,EAAPf,CAAH,IAEOsB,KAGpBC,EAAcvB,IAAOwB,GAAV,KAMXC,EAAWzB,IAAO0B,GAAV,KAiBC,SAASC,EAAT,GAAiE,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAC/C,OACE,kBAACR,EAAD,KACE,kBAACL,EAAD,KAAQY,IACH,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAMC,QACL,kBAACP,EAAD,KACGM,EAAKE,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACR,EAAD,CAAUS,IAAKD,GAAID,OAIvB,gDAAsBJ,EAAtB,e,+OCpCR,IAAMb,EAAUf,IAAOmC,QAAV,IAISC,IACXlC,KAMI,SAASmC,EAAT,GAUM,IATnB1B,EASkB,EATlBA,MACAC,EAQkB,EARlBA,SACAC,EAOkB,EAPlBA,SACAO,EAMkB,EANlBA,YACAkB,EAKkB,EALlBA,WACAC,EAIkB,EAJlBA,QACAC,EAGkB,EAHlBA,QACAC,EAEkB,EAFlBA,UACAC,EACkB,EADlBA,SAEA,OACE,kBAAC,EAAD,KACE,kBAAChC,EAAD,CACEC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,IAEZ,kBAACM,EAAD,CAAwBC,YAAaA,IACrC,kBAACO,EAAD,CAAiBC,MAAM,aAAaC,KAAMS,IAC1C,kBAACX,EAAD,CAAiBC,MAAM,UAAUC,KAAMU,IACvC,kBAACZ,EAAD,CAAiBC,MAAM,UAAUC,KAAMW,IACvC,kBAACb,EAAD,CAAiBC,MAAM,YAAYC,KAAMY,IACzC,kBAACd,EAAD,CAAiBC,MAAM,WAAWC,KAAMa,K,6DCnC/B,SAASC,IAAe,IAC7BC,EAAOC,cAAPD,GAD4B,ECPvB,SACbE,GAC0B,IAAD,EACaC,mBAA0B,CAC9DpC,MAAO,KACPC,SAAU,KACVC,SAAU,KACVO,YAAa,KACbkB,WAAY,GACZC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,SAAU,KAVa,mBAClBM,EADkB,KACLC,EADK,OAYKF,oBAAkB,GAZvB,mBAYlBG,EAZkB,KAYTC,EAZS,KA8BzB,OAhBAC,qBAAU,WACR,IAAIC,GAAU,EAUd,OATe,uCAAG,4BAAAC,EAAA,sEACQC,YAAeT,GADvB,OACVU,EADU,OAEZH,IACFJ,EAAeO,GACfL,GAAW,IAJG,2CAAH,oDAQfM,GACO,WACLJ,GAAU,KAEX,CAACP,IAEG,CACLI,UACAF,eDzB+BU,CAAeC,OAAOf,IAA/CM,EAF4B,EAE5BA,QAASF,EAFmB,EAEnBA,YAEjB,OACE,kBAAC,IAAD,KACGE,EACC,kBAACU,EAAA,EAAD,MAEA,kBAACvB,EAAD,CACE1B,MAAOqC,EAAYrC,MACnBC,SAAUoC,EAAYpC,SACtBC,SAAUmC,EAAYnC,SACtBO,YAAa4B,EAAY5B,YACzBkB,WAAYU,EAAYV,WACxBC,QAASS,EAAYT,QACrBC,QAASQ,EAAYR,QACrBC,UAAWO,EAAYP,UACvBC,SAAUM,EAAYN","file":"static/js/6.a6608755.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { COLOR_WHITE, COLOR_GRAY } from 'src/shared/styles/themes/colors';\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  color: ${COLOR_WHITE};\n  margin-bottom: 3rem;\n  text-align: center;\n`;\n\nconst Back = styled.div`\n  align-self: flex-start;\n  margin-bottom: 1.5rem;\n\n  a {\n    font-family: inherit;\n    font-size: 1.6rem;\n    color: ${COLOR_GRAY};\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst Title = styled.h2`\n  font-family: 'Star Jedi', 'Open Sans', sans-serif;\n  font-size: 4rem;\n  margin-bottom: 1.5rem;\n  letter-spacing: 2px;\n`;\n\nconst Team = styled.p`\n  font-family: inherit;\n\n  &:not(:last-child) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default function MovieDetailHeader({\n  title,\n  director,\n  producer,\n}: MovieDetailHeaderProps) {\n  return (\n    <Header>\n      <Back>\n        <Link to='/'>&larr; Back to list</Link>\n      </Back>\n      <Title>{title}</Title>\n      <Team>Director : {director}</Team>\n      <Team>Producer : {producer}</Team>\n    </Header>\n  );\n}\n\nexport type MovieDetailHeaderProps = {\n  title: string | null;\n  director: string | null;\n  producer: string | null;\n};\n\nMovieDetailHeader.propTypes = {\n  title: PropTypes.string,\n  director: PropTypes.string,\n  producer: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nimport { COLOR_WHITE, COLOR_GRAY } from 'src/shared/styles/themes/colors';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 3rem;\n`;\n\nexport const Label = styled.h4`\n  font-family: inherit;\n  font-size: 1.8rem;\n  color: ${COLOR_GRAY};\n  margin-bottom: 1.5rem;\n`;\n\nexport const Text = styled.p`\n  font-family: inherit;\n  font-size: 1.6rem;\n  color: ${COLOR_WHITE};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Label, Text } from './MovieDetail.style';\n\nexport default function MovieDetailDescription({\n  description,\n}: MovieDetailDescriptionProps) {\n  return (\n    <Wrapper>\n      <Label>Description</Label>\n      <Text>{description}</Text>\n    </Wrapper>\n  );\n}\n\nexport type MovieDetailDescriptionProps = {\n  description: string | null;\n};\n\nMovieDetailDescription.propTypes = {\n  description: PropTypes.string,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Label } from './MovieDetail.style';\n\nimport { COLOR_BORDER } from 'src/shared/styles/themes/colors';\n\nconst WrapperCustom = styled(Wrapper)`\n  padding-top: 3rem;\n  border-top: 2px solid ${COLOR_BORDER};\n`;\n\nconst WrapperList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 1.8rem;\n`;\n\nconst ListItem = styled.li`\n  width: 100%;\n  position: relative;\n  flex: 0 0 100%;\n  max-width: 100%;\n\n  @media (min-width: 48em) {\n    flex: 0 0 calc(100% / 2);\n    max-width: calc(100% / 2);\n  }\n\n  @media (min-width: 62em) {\n    flex: 0 0 calc(100% / 3);\n    max-width: calc(100% / 3);\n  }\n`;\n\nexport default function MovieDetailList({ label, list }: MovieDetailListProps) {\n  return (\n    <WrapperCustom>\n      <Label>{label}</Label>\n      {list?.length ? (\n        <WrapperList>\n          {list.map((data, i) => (\n            <ListItem key={i}>{data}</ListItem>\n          ))}\n        </WrapperList>\n      ) : (\n        <p>We don't have any {label} data yet!</p>\n      )}\n    </WrapperCustom>\n  );\n}\n\nexport type MovieDetailListProps = {\n  label: string;\n  list?: string[];\n};\n\nMovieDetailList.propTypes = {\n  label: PropTypes.string.isRequired,\n  list: PropTypes.array,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport MovieDetailHeader from './MovieDetailHeader';\nimport MovieDetailDescription from './MovieDetailDescription';\nimport MovieDetailList from './MovieDetailList';\n\nimport { MovieDetailType } from 'src/shared/helpers/api';\nimport { COLOR_WHITE, COLOR_BACKGROUND } from 'src/shared/styles/themes/colors';\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: ${COLOR_BACKGROUND};\n  color: ${COLOR_WHITE};\n  font-size: 1.6rem;\n  padding: 3rem;\n  border-radius: 0.5rem;\n`;\n\nexport default function MovieDetailContent({\n  title,\n  director,\n  producer,\n  description,\n  characters,\n  planets,\n  species,\n  starships,\n  vehicles,\n}: MovieDetailType) {\n  return (\n    <Wrapper>\n      <MovieDetailHeader\n        title={title}\n        director={director}\n        producer={producer}\n      />\n      <MovieDetailDescription description={description} />\n      <MovieDetailList label='Characters' list={characters} />\n      <MovieDetailList label='Planets' list={planets} />\n      <MovieDetailList label='Species' list={species} />\n      <MovieDetailList label='Starships' list={starships} />\n      <MovieDetailList label='Vehicles' list={vehicles} />\n    </Wrapper>\n  );\n}\n\nMovieDetailContent.propTypes = {\n  title: PropTypes.string,\n  director: PropTypes.string,\n  producer: PropTypes.string,\n  description: PropTypes.string,\n  characters: PropTypes.array,\n  planets: PropTypes.array,\n  species: PropTypes.array,\n  starships: PropTypes.array,\n  vehicles: PropTypes.array,\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport MovieDetailContent from './MovieDetailContent';\n\nimport { Container } from 'src/shared/styles/base/grid';\nimport Loader from 'src/shared/components/Loader/Loader';\n\nimport useMovieDetail from 'src/shared/hooks/useMovieDetail';\n\nexport default function MovieDetail() {\n  const { id } = useParams<{ id: string }>();\n  const { loading, movieDetail } = useMovieDetail(Number(id));\n\n  return (\n    <Container>\n      {loading ? (\n        <Loader />\n      ) : (\n        <MovieDetailContent\n          title={movieDetail.title}\n          director={movieDetail.director}\n          producer={movieDetail.producer}\n          description={movieDetail.description}\n          characters={movieDetail.characters}\n          planets={movieDetail.planets}\n          species={movieDetail.species}\n          starships={movieDetail.starships}\n          vehicles={movieDetail.vehicles}\n        />\n      )}\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { getSingleMovie, MovieDetailType } from 'src/shared/helpers/api';\n\nexport default function useMovieDetail(\n  movieId: number\n): UseMovieDetailHooksType {\n  const [movieDetail, setMovieDetail] = useState<MovieDetailType>({\n    title: null,\n    director: null,\n    producer: null,\n    description: null,\n    characters: [],\n    planets: [],\n    species: [],\n    starships: [],\n    vehicles: [],\n  });\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchData = async () => {\n      const movieData = await getSingleMovie(movieId);\n      if (mounted) {\n        setMovieDetail(movieData);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, [movieId]);\n\n  return {\n    loading,\n    movieDetail,\n  };\n}\n\nexport type UseMovieDetailHooksType = {\n  loading: boolean;\n  movieDetail: MovieDetailType;\n};\n"],"sourceRoot":""}