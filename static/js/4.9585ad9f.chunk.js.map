{"version":3,"sources":["shared/assets/images/bg-card-1.png","shared/assets/images/bg-card-2.png","shared/assets/images/bg-card-3.png","shared/assets/images/bg-card-4.png","shared/assets/images/bg-card-5.png","shared/assets/images/bg-card-6.png","shared/assets/images/bg-card-7.png","shared/constants/month-name.constant.ts","components/MovieList/MovieHeader.tsx","shared/helpers/format-date.ts","components/MovieList/MovieDescription.tsx","components/MovieList/MovieLink.tsx","shared/styles/themes/box-shadow.ts","components/MovieList/MovieItem.tsx","components/MovieList/MovieList.tsx","shared/hooks/useMovieList.tsx"],"names":["module","exports","MONTH_NAMES","MovieHeaderStyle","styled","div","MovieTitle","h3","MovieDate","span","COLOR_GRAY","MovieHeader","id","title","releaseDate","to","date","Error","split","year","month","day","length","parseInt","Number","formatDate","MovieDescriptionStyle","p","COLOR_WHITE","MovieDescription","description","substring","MovieLinkStyle","COLOR_RED","COLOR_YELLOW","MovieLink","BOX_SHADOW_PRIMARY","COLOR_BLACK","BOX_SHADOW_PRIMARY_HOVER","COLOR_BLUE","ColumnWithBackground","Col","bgCardOne","bgCardTwo","bgCardThree","bgCardFour","bgCardFive","bgCardSix","bgCardSeven","MovieContent","COLOR_BACKGROUND","MovieItem","MovieList","useState","movieList","setMovieList","loading","setLoading","useEffect","mounted","a","getAllMovie","movieDataType","fetchData","useMovieList","Loader","map","movie","key"],"mappings":"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","file":"static/js/4.9585ad9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-card-1.0c96fd00.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-2.b0a7b209.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-3.1914d853.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-4.c21c4d4b.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-5.67d061d6.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-6.b4fea25d.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-card-7.ae324be7.png\";","export const MONTH_NAMES = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { formatDate } from 'src/shared/helpers/format-date';\nimport { COLOR_GRAY } from 'src/shared/styles/themes/colors';\n\nconst MovieHeaderStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.7rem;\n`;\n\nconst MovieTitle = styled.h3`\n  font-family: 'Star Jedi', 'Open Sans', sans-serif;\n  font-size: 2.2rem;\n  letter-spacing: 2px;\n`;\n\nconst MovieDate = styled.span`\n  color: ${COLOR_GRAY};\n  font-size: 1.4rem;\n`;\n\nexport default function MovieHeader({\n  id,\n  title,\n  releaseDate,\n}: MovieHeaderProps) {\n  return (\n    <MovieHeaderStyle>\n      <MovieTitle>\n        <Link to={`/movie/${id}`}>{title}</Link>\n      </MovieTitle>\n      <MovieDate>{formatDate(releaseDate)}</MovieDate>\n    </MovieHeaderStyle>\n  );\n}\n\nexport type MovieHeaderProps = {\n  id: number;\n  title: string;\n  releaseDate: string;\n};\n\nMovieHeader.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n};\n","import { MONTH_NAMES } from '../constants/month-name.constant';\n\nexport function formatDate(date: string): string {\n  if (!date) {\n    throw new Error('Missing required parameter');\n  }\n\n  const [year, month, day] = date.split('-');\n  if (\n    !year ||\n    !month ||\n    !day ||\n    year.length < 4 ||\n    parseInt(month) < 1 ||\n    parseInt(month) > 12\n  ) {\n    throw new Error('Parameter format must be YYYY-MM-DD');\n  }\n  return `${MONTH_NAMES[Number(month) - 1]} ${day}, ${year}`;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { COLOR_WHITE } from 'src/shared/styles/themes/colors';\n\nconst MovieDescriptionStyle = styled.p`\n  font-family: inherit;\n  color: ${COLOR_WHITE};\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 2.5rem;\n`;\n\nexport default function MovieDescription({\n  description,\n}: MovieDescriptionProps) {\n  return (\n    <MovieDescriptionStyle>\n      {description.substring(0, 260)}...\n    </MovieDescriptionStyle>\n  );\n}\n\nexport type MovieDescriptionProps = {\n  description: string;\n};\n\nMovieDescription.propTypes = {\n  description: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { COLOR_YELLOW, COLOR_RED } from 'src/shared/styles/themes/colors';\n\nconst MovieLinkStyle = styled.p`\n  padding-top: 1.2rem;\n  font-size: 1.4rem;\n  text-transform: capitalize;\n  border-top: 2px solid ${COLOR_RED};\n  color: ${COLOR_YELLOW};\n`;\n\nexport default function MovieLink({ id }: MovieLinkProps) {\n  return (\n    <MovieLinkStyle>\n      <Link to={`/movie/${id}`}>More info</Link>\n    </MovieLinkStyle>\n  );\n}\n\nexport type MovieLinkProps = {\n  id: number;\n};\n\nMovieLink.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import { COLOR_BLACK, COLOR_BLUE } from './colors';\n\nexport const BOX_SHADOW_PRIMARY = `0px 0px 10px 3px transparent, 0px 0px 10px ${COLOR_BLACK}`;\nexport const BOX_SHADOW_PRIMARY_HOVER = `0px 0px 10px 3px ${COLOR_BLUE}, 0px 0px 10px ${COLOR_BLACK}`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport MovieHeader from './MovieHeader';\nimport MovieDescription from './MovieDescription';\nimport MovieLink from './MovieLink';\n\nimport { MovieDataType } from 'src/shared/helpers/api';\n\nimport { Col } from 'src/shared/styles/base/grid';\n\nimport bgCardOne from 'src/shared/assets/images/bg-card-1.png';\nimport bgCardTwo from 'src/shared/assets/images/bg-card-2.png';\nimport bgCardThree from 'src/shared/assets/images/bg-card-3.png';\nimport bgCardFour from 'src/shared/assets/images/bg-card-4.png';\nimport bgCardFive from 'src/shared/assets/images/bg-card-5.png';\nimport bgCardSix from 'src/shared/assets/images/bg-card-6.png';\nimport bgCardSeven from 'src/shared/assets/images/bg-card-7.png';\n\nimport { COLOR_BACKGROUND, COLOR_WHITE } from 'src/shared/styles/themes/colors';\nimport {\n  BOX_SHADOW_PRIMARY,\n  BOX_SHADOW_PRIMARY_HOVER,\n} from 'src/shared/styles/themes/box-shadow';\n\nconst ColumnWithBackground = styled(Col)`\n  &:nth-child(1) > * {\n    background: url(${bgCardOne});\n  }\n\n  &:nth-child(2) > * {\n    background: url(${bgCardTwo});\n  }\n\n  &:nth-child(3) > * {\n    background: url(${bgCardThree});\n  }\n\n  &:nth-child(4) > * {\n    background: url(${bgCardFour});\n  }\n\n  &:nth-child(5) > * {\n    background: url(${bgCardFive});\n  }\n\n  &:nth-child(6) > * {\n    background: url(${bgCardSix});\n  }\n\n  &:nth-child(7) > * {\n    background: url(${bgCardSeven});\n  }\n`;\n\nconst MovieContent = styled.div`\n  display: block;\n  background-color: ${COLOR_BACKGROUND};\n  padding: 2rem;\n  color: ${COLOR_WHITE};\n  transform: perspective(1px) translateZ(0);\n  box-shadow: ${BOX_SHADOW_PRIMARY};\n  transition: all 0.3s;\n  overflow: hidden;\n  border-radius: 0.5rem;\n\n  &:hover {\n    box-shadow: ${BOX_SHADOW_PRIMARY_HOVER};\n  }\n`;\n\nexport default function MovieItem({\n  id,\n  title,\n  description,\n  releaseDate,\n}: MovieDataType) {\n  return (\n    <ColumnWithBackground>\n      <MovieContent>\n        <MovieHeader id={id} title={title} releaseDate={releaseDate} />\n        <MovieDescription description={description} />\n        <MovieLink id={id} />\n      </MovieContent>\n    </ColumnWithBackground>\n  );\n}\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport MovieItem from './MovieItem';\n\nimport { Container, Row } from 'src/shared/styles/base/grid';\nimport Loader from 'src/shared/components/Loader/Loader';\n\nimport useMovieList from 'src/shared/hooks/useMovieList';\n\nexport default function MovieList() {\n  const { loading, movieList } = useMovieList();\n\n  return (\n    <Container>\n      <Row>\n        {loading ? (\n          <Loader />\n        ) : (\n          movieList.map((movie) => (\n            <MovieItem\n              key={movie.id}\n              id={movie.id}\n              description={movie.description}\n              releaseDate={movie.releaseDate}\n              title={movie.title}\n            />\n          ))\n        )}\n      </Row>\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nimport { getAllMovie, MovieDataType } from 'src/shared/helpers/api';\n\nexport default function useMovieList(): MovieListHooksType {\n  const [movieList, setMovieList] = useState<MovieDataType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchData = async () => {\n      const movieDataType = await getAllMovie();\n      if (mounted) {\n        setMovieList(movieDataType);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return {\n    loading,\n    movieList,\n  };\n}\n\nexport type MovieListHooksType = {\n  loading: boolean;\n  movieList: MovieDataType[];\n};\n"],"sourceRoot":""}